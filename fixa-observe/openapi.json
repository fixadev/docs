{
  "openapi": "3.0.1",
  "info": {
    "title": "fixa API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.fixa.dev/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/upload-call": {
      "post": {
        "tags": ["calls"],
        "operationId": "uploadCall",
        "description": "uploads a new call recording",
        "requestBody": {
          "description": "Call recording details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["stereoRecordingUrl", "agentId", "callId"],
                "properties": {
                  "callId": {
                    "type": "string",
                    "description": "unique identifier for the call"
                  },
                  "agentId": {
                    "type": "string",
                    "description": "the ID of the agent associated with the call. this can be your internal agent ID. this is used to identify which calls came from which agent. if you haven't added an agent with this ID to fixa, it will be created automatically"
                  },
                  "stereoRecordingUrl": {
                    "type": "string",
                    "description": "URL where the stereo call recording is stored. it can either be a presigned url or a public url to a file in your storage bucket. recordings must be two channel audio files with the caller on the left channel and your agent on the right channel."
                  },
                  "saveRecording": {
                    "type": "boolean",
                    "description": "whether to save the recording to fixa's storage. must be true if you are sending presigned urls.",
                    "default": true
                  },
                  "language": {
                    "type": "string",
                    "description": "language of the call. defaults to english",
                    "enum": [
                      "bg",
                      "ca",
                      "zh",
                      "zh-CN",
                      "zh-Hans",
                      "zh-TW",
                      "zh-Hant",
                      "zh-HK",
                      "cs",
                      "da",
                      "da-DK",
                      "nl",
                      "en",
                      "en-US",
                      "en-AU",
                      "en-GB",
                      "en-NZ",
                      "en-IN",
                      "et",
                      "fi",
                      "nl-BE",
                      "fr",
                      "fr-CA",
                      "de",
                      "de-CH",
                      "el",
                      "hi",
                      "hu",
                      "id",
                      "it",
                      "ja",
                      "ko",
                      "ko-KR",
                      "lv",
                      "lt",
                      "ms",
                      "no",
                      "pl",
                      "pt",
                      "pt-BR",
                      "pt-PT",
                      "ro",
                      "ru",
                      "sk",
                      "es",
                      "es-419",
                      "sv",
                      "sv-SE",
                      "th",
                      "th-TH",
                      "tr",
                      "uk",
                      "vi"
                    ],
                    "default": "en"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "optional custom metadata fields you'd like to use to analyze your call data (i.e. region, llm, tts model, etc.). these can be used to filter calls in the dashboard",
                    "additionalProperties": true,
                    "example": {
                      "regionId": "USA",
                      "ttsModel": "eleven-labs-v2"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "call uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "whether the call was uploaded successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/templates": {
      "get": {
        "description": "Get evaluation templates",
        "responses": {
          "200": {
            "description": "Evaluation templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationTemplate"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create evaluation template",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationTemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTemplate"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/templates/{id}": {
      "get": {
        "description": "get evaluation template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "evaluation template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTemplate"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "update evaluation template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationTemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTemplate"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "delete evaluation template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTemplate"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations": {
      "get": {
        "description": "get evaluations",
        "responses": {
          "200": {
            "description": "evaluations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create evaluation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Evaluation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{id}": {
      "get": {
        "description": "get evaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "evaluation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update evaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Evaluation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete evaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluation deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/groups": {
      "get": {
        "description": "Get evaluation groups",
        "responses": {
          "200": {
            "description": "Evaluation groups retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationGroup"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create evaluation group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationGroupInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationGroup"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/groups/{id}": {
      "get": {
        "description": "Get evaluation group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evaluation group retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationGroup"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update evaluation group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationGroupInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationGroup"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete evaluation group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/searches": {
      "get": {
        "tags": ["searches"],
        "operationId": "listSearches",
        "description": "Get all saved searches for the authenticated user",
        "parameters": [
          {
            "name": "includeDefault",
            "in": "query",
            "description": "Whether to include default searches",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Searches retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "searches"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "searches": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SavedSearchWithIncludes"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["searches"],
        "operationId": "createSearch",
        "description": "Create a new saved search",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "filter"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the saved search"
                  },
                  "filter": {
                    "type": "object",
                    "description": "Search filter criteria",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "search"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "search": {
                      "$ref": "#/components/schemas/SavedSearchWithIncludes"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/searches/default": {
      "get": {
        "tags": ["searches"],
        "operationId": "getDefaultSearch",
        "description": "Get the default saved search",
        "responses": {
          "200": {
            "description": "Default search retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "search"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "search": {
                      "$ref": "#/components/schemas/SavedSearchWithIncludes"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/searches/{id}": {
      "get": {
        "tags": ["searches"],
        "operationId": "getSearch",
        "description": "Get a specific saved search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "search"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "search": {
                      "$ref": "#/components/schemas/SavedSearchWithIncludes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Search not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["searches"],
        "operationId": "updateSearch",
        "description": "Update a saved search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedSearchWithIncludes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "search"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "search": {
                      "$ref": "#/components/schemas/SavedSearchWithIncludes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["searches"],
        "operationId": "deleteSearch",
        "description": "Delete a saved search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts": {
      "get": {
        "tags": ["alerts"],
        "operationId": "listAlerts",
        "description": "Get all alerts for the authenticated user",
        "responses": {
          "200": {
            "description": "Alerts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "alerts"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AlertWithDetails"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{id}": {
      "get": {
        "tags": ["alerts"],
        "operationId": "getAlert",
        "description": "Get an existing alert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertWithDetails"
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["alerts"],
        "operationId": "updateAlert",
        "description": "Update an existing alert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertWithDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "alert"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "alert": {
                      "$ref": "#/components/schemas/AlertWithDetails"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["alerts"],
        "operationId": "deleteAlert",
        "description": "Delete an alert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{savedSearchId}": {
      "post": {
        "tags": ["alerts"],
        "operationId": "createAlert",
        "description": "Create a new alert for a saved search",
        "parameters": [
          {
            "name": "savedSearchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the saved search. If not provided, will use default saved search."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "alert"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "alert": {
                      "$ref": "#/components/schemas/AlertWithDetails"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlertWithDetails": {
        "type": "object",
        "required": [
          "id",
          "type",
          "details",
          "ownerId",
          "savedSearchId",
          "slackNames"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the alert"
          },
          "type": {
            "type": "string",
            "enum": ["latency", "evalSet"]
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LatencyAlertDetails"
              },
              {
                "$ref": "#/components/schemas/EvalSetAlertDetails"
              }
            ]
          },
          "savedSearchId": {
            "type": "string",
            "description": "ID of the associated saved search"
          },
          "slackNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Slack usernames to notify",
            "default": []
          },
          "ownerId": {
            "type": "string",
            "description": "ID of the alert owner"
          }
        }
      },
      "LatencyAlertDetails": {
        "type": "object",
        "required": [
          "lookbackPeriod",
          "cooldownPeriod",
          "lastAlerted",
          "percentile",
          "threshold"
        ],
        "properties": {
          "lookbackPeriod": {
            "type": "object",
            "required": ["label", "value"],
            "properties": {
              "label": {
                "type": "string",
                "description": "Human readable period label"
              },
              "value": {
                "type": "number",
                "description": "Period value in milliseconds"
              }
            }
          },
          "cooldownPeriod": {
            "type": "object",
            "required": ["label", "value"],
            "properties": {
              "label": {
                "type": "string",
                "description": "Human readable period label"
              },
              "value": {
                "type": "number",
                "description": "Period value in milliseconds"
              }
            }
          },
          "lastAlerted": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this alert was triggered"
          },
          "percentile": {
            "type": "string",
            "enum": ["p50", "p90", "p95"],
            "description": "Percentile threshold for latency"
          },
          "threshold": {
            "type": "number",
            "description": "Latency threshold in milliseconds"
          }
        }
      },
      "EvalSetAlertDetails": {
        "type": "object",
        "required": ["evaluationGroupId", "trigger"],
        "properties": {
          "evaluationGroupId": {
            "type": "string",
            "description": "ID of the evaluation group"
          },
          "trigger": {
            "type": "boolean",
            "nullable": true,
            "description": "Trigger condition for the eval set"
          }
        }
      },
      "CreateAlert": {
        "type": "object",
        "required": ["type", "details"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["latency", "evalSet"],
            "description": "Type of alert"
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LatencyAlertDetails"
              },
              {
                "$ref": "#/components/schemas/EvalSetAlertDetails"
              }
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["success", "error"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Call": {
        "type": "object",
        "required": ["id", "result", "status"],
        "properties": {
          "id": { "type": "string", "description": "the id of the call" },
          "status": {
            "type": "string",
            "enum": ["in_progress", "analyzing", "completed"],
            "description": "the status of the call"
          },
          "result": {
            "type": "string",
            "enum": ["success", "failure"],
            "description": "the result of the call"
          }
        }
      },
      "Evaluation": {
        "type": "object",
        "required": [
          "id",
          "createdAt",
          "enabled",
          "isCritical",
          "params",
          "evaluationTemplateId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the evaluation"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp of the evaluation"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the evaluation is enabled"
          },
          "isCritical": {
            "type": "boolean",
            "description": "Whether this is a critical evaluation"
          },
          "params": {
            "type": "object",
            "description": "JSON parameters for the evaluation",
            "additionalProperties": true
          },
          "evaluationTemplateId": {
            "type": "string",
            "description": "ID of the associated evaluation template"
          },
          "scenarioId": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the associated scenario"
          },
          "evaluationGroupId": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the associated evaluation group"
          },
          "agentId": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the associated agent"
          }
        }
      },
      "ScenarioInput": {
        "type": "object",
        "required": ["name", "instructions", "evaluations"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100
          },
          "instructions": {
            "type": "string",
            "maxLength": 1000
          },
          "evaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioEvaluationInput"
            },
            "minItems": 1
          }
        }
      },
      "Scenario": {
        "type": "object",
        "required": ["id", "name", "instructions", "evaluations"],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100
          },
          "instructions": {
            "type": "string",
            "maxLength": 1000
          },
          "evaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Evaluation"
            },
            "minItems": 1
          }
        }
      },
      "EvaluationTemplate": {
        "type": "object",
        "required": ["id", "name", "description", "params"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the evaluation template"
          },
          "name": {
            "type": "string",
            "description": "Name of the evaluation template"
          },
          "description": {
            "type": "string",
            "description": "Description of the evaluation template"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Parameters for the evaluation"
          },
          "scenarioId": {
            "type": "string",
            "nullable": true,
            "description": "Associated scenario ID"
          },
          "toolCallExpectedResult": {
            "type": "string",
            "description": "Expected result for tool call"
          },
          "agentId": {
            "type": "string",
            "nullable": true,
            "description": "Associated agent ID"
          },
          "evaluationGroupId": {
            "type": "string",
            "nullable": true,
            "description": "Associated evaluation group ID"
          }
        }
      },
      "EvaluationTemplateInput": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the evaluation template input"
          },
          "description": {
            "type": "string",
            "description": "Description of the evaluation template input"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Parameters for the evaluation"
          }
        }
      },

      "EvaluationInput": {
        "type": "object",
        "required": ["evaluationTemplateId"],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the evaluation is enabled",
            "default": true
          },
          "isCritical": {
            "type": "boolean",
            "description": "Whether this is a critical evaluation",
            "default": true
          },
          "params": {
            "type": "object",
            "description": "JSON parameters for the evaluation",
            "default": {},
            "additionalProperties": true
          },
          "evaluationTemplateId": {
            "type": "string",
            "description": "ID of the associated evaluation template"
          },
          "scenarioId": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the associated scenario"
          },
          "evaluationGroupId": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the associated evaluation group"
          }
        }
      },
      "ScenarioEvaluationInput": {
        "type": "object",
        "required": ["evaluationTemplateId"],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the evaluation is enabled",
            "default": true
          },
          "isCritical": {
            "type": "boolean",
            "description": "Whether this is a critical evaluation",
            "default": true
          },
          "params": {
            "type": "object",
            "description": "JSON parameters for the evaluation",
            "default": {},
            "additionalProperties": true
          },
          "evaluationTemplateId": {
            "type": "string",
            "description": "ID of the associated evaluation template"
          }
        }
      },
      "SavedSearchEvaluationInput": {
        "type": "object",
        "required": ["evaluationTemplateId"],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the evaluation is enabled",
            "default": true
          },
          "isCritical": {
            "type": "boolean",
            "description": "Whether this is a critical evaluation",
            "default": true
          },
          "params": {
            "type": "object",
            "description": "JSON parameters for the evaluation",
            "default": {},
            "additionalProperties": true
          },
          "evaluationTemplateId": {
            "type": "string",
            "description": "ID of the associated evaluation template"
          }
        }
      },
      "EvaluationGroup": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the evaluation group"
          },
          "name": {
            "type": "string",
            "description": "Name of the evaluation group"
          }
        }
      },
      "EvaluationGroupInput": {
        "type": "object",
        "required": ["name", "evaluationGroupId"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the evaluation group input"
          },
          "evaluationGroupId": {
            "type": "string",
            "description": "ID of the associated evaluation group"
          }
        }
      },
      "ScenarioWithIncludes": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/Scenario" },
          {
            "type": "object",
            "properties": {
              "evaluations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EvaluationWithIncludes"
                }
              }
            }
          }
        ]
      },
      "Test": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the test"
          },
          "calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Call"
            }
          }
        }
      },
      "TestAgent": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the test agent"
          }
        }
      },
      "GeneralEvaluationWithIncludes": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/GeneralEvaluation" },
          {
            "type": "object",
            "properties": {
              "evaluation": {
                "$ref": "#/components/schemas/EvaluationWithIncludes"
              }
            }
          }
        ]
      },
      "EvaluationWithIncludes": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/Evaluation" },
          {
            "type": "object",
            "properties": {
              "evaluationTemplate": {
                "$ref": "#/components/schemas/EvaluationTemplate"
              }
            }
          }
        ]
      },
      "GeneralEvaluation": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the general evaluation"
          }
        }
      },
      "SavedSearchWithIncludes": {
        "type": "object",
        "required": ["id", "name", "filter", "ownerId"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the saved search"
          },
          "name": {
            "type": "string",
            "description": "Name of the saved search"
          },
          "filter": {
            "type": "object",
            "description": "Search filter criteria",
            "additionalProperties": true
          },
          "ownerId": {
            "type": "string",
            "description": "ID of the search owner"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
